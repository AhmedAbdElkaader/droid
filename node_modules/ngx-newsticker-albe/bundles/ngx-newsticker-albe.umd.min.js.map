{"version":3,"sources":["ng://ngx-newsticker-albe/lib/ngx-newsticker-albe.component.ts","ng://ngx-newsticker-albe/lib/ngx-newsticker-albe.module.ts"],"names":["NgxNewstickerAlbeComponent","elementRef","renderer","this","title","events","interval","showCounter","ACTIONS","NEXT","PREV","position","prototype","ngOnInit","autoNavigate","navigate","ngAfterViewInit","_this","defaultColor","setStyle","ntRef","nativeElement","backColor","ntCounterRef","ntTitleRef","nDart","ntNaviRef","forEach","item","onMouseOver","clearInterval","autoNext","onMouseLeave","setInterval","action","shift","length","current","Component","args","selector","template","ElementRef","Renderer2","Input","ViewChild","static","ViewChildren","HostListener","NgxNewstickerAlbeModule","NgModule","imports","CommonModule","declarations","exports"],"mappings":"yVACA,IAAAA,EAAA,WAiDE,SAAAA,EACUC,EACAC,GADAC,KAAAF,WAAAA,EACAE,KAAAD,SAAAA,EA9BDC,KAAAC,MAAQ,GAERD,KAAAE,OAAwB,GAExBF,KAAAG,SAAW,IAEXH,KAAAI,aAAc,EAYfJ,KAAAK,QAAU,CAChBC,KAAQ,EACRC,MAAS,GAMXP,KAAAQ,UAAY,EAsEd,OAhEEX,EAAAY,UAAAC,SAAA,WACEV,KAAKW,eACLX,KAAKY,SAAS,SAGhBf,EAAAY,UAAAI,gBAAA,WAAA,IAAAC,EAAAd,KACEA,KAAKe,aAAef,KAAKe,cAAgB,UAGzCf,KAAKD,SAASiB,SAAShB,KAAKiB,MAAMC,cAAe,mBAAoBlB,KAAKmB,WAAa,WACvFnB,KAAKD,SAASiB,SAAShB,KAAKiB,MAAMC,cAAe,eAAgBlB,KAAKe,cAElEf,KAAKoB,cACPpB,KAAKD,SAASiB,SAAShB,KAAKoB,aAAaF,cAAe,mBAAoBlB,KAAKe,cAG/Ef,KAAKqB,aACPrB,KAAKD,SAASiB,SAAShB,KAAKqB,WAAWH,cAAe,mBAAoBlB,KAAKe,cAC/Ef,KAAKD,SAASiB,SAAShB,KAAKsB,MAAMJ,cAAe,oBAAqBlB,KAAKe,eAG7Ef,KAAKuB,UAAUC,QAAO,SAACC,GACrBX,EAAKf,SAASiB,SAASS,EAAKP,cAAe,eAAgBJ,EAAKC,iBAMpElB,EAAAY,UAAAiB,YADA,WAEEC,cAAc3B,KAAK4B,WAIrB/B,EAAAY,UAAAoB,aADA,WAEE7B,KAAKW,gBAGCd,EAAAY,UAAAE,aAAR,WAAA,IAAAG,EAAAd,KACMA,KAAKG,SAAW,EAClBH,KAAK4B,SAAWE,YAAW,WAAO,OAAAhB,EAAKF,SAAS,SAASZ,KAAKG,UAE9DwB,cAAc3B,KAAK4B,WAIhB/B,EAAAY,UAAAG,SAAP,SAAgBmB,GACd,GAAoC,oBAAzB/B,KAAKK,QAAQ0B,GAAxB,KAIMC,EAAQhC,KAAKK,QAAQ0B,GAC3B/B,KAAKQ,SAAWR,KAAKQ,SAAWwB,EAE5BhC,KAAKE,SACHF,KAAKQ,SAAW,EAClBR,KAAKQ,SAAWR,KAAKE,OAAO+B,OAAS,EAC5BjC,KAAKQ,UAAYR,KAAKE,OAAO+B,SACtCjC,KAAKQ,SAAW,GAGlBR,KAAKyB,KAAOzB,KAAKE,OAAOF,KAAKQ,UAC7BR,KAAKkC,QAAclC,KAAKQ,SAAW,EAAC,IAAKR,KAAKE,OAAO+B,8BArG1DE,EAAAA,UAASC,KAAA,CAAC,CAETC,SAAU,iBACVC,SAAA,66EAZAC,EAAAA,kBAEAC,EAAAA,4CAeCC,EAAAA,sBAEAA,EAAAA,wBAEAA,EAAAA,2BAEAA,EAAAA,4BAEAA,EAAAA,yBAEAA,EAAAA,qBAEAC,EAAAA,UAASN,KAAA,CAAC,KAAM,CAACO,UAAQ,0BACzBD,EAAAA,UAASN,KAAA,CAAC,YAAa,CAACO,UAAQ,wBAChCD,EAAAA,UAASN,KAAA,CAAC,UAAW,CAACO,UAAQ,mBAC9BD,EAAAA,UAASN,KAAA,CAAC,QAAS,CAACO,UAAQ,uBAC5BC,EAAAA,aAAYR,KAAA,CAAC,+BA2CbS,EAAAA,aAAYT,KAAA,CAAC,mCAKbS,EAAAA,aAAYT,KAAA,CAAC,iBAgChBvC,EArHA,GCDAiD,EAAA,WAKA,SAAAA,KAKuC,2BALtCC,EAAAA,SAAQX,KAAA,CAAC,CACRY,QAAS,CAACC,EAAAA,cACVC,aAAc,CAACrD,GACfsD,QAAS,CAACtD,OAE2BiD,EAVvC","sourcesContent":["import { CommonModule } from '@angular/common';\r\nimport {\r\n  Component,\r\n  OnInit,\r\n  Input,\r\n  ElementRef,\r\n  AfterViewInit,\r\n  Renderer2,\r\n  QueryList,\r\n  ViewChild,\r\n  ViewChildren,\r\n  HostListener\r\n} from '@angular/core';\r\n\r\n@Component({\r\n  // tslint:disable-next-line:component-selector\r\n  selector: 'ngx-newsticker',\r\n  templateUrl: './ngx-newsticker-albe.component.html',\r\n  styleUrls: ['./ngx-newsticker-albe.component.scss']\r\n})\r\nexport class NgxNewstickerAlbeComponent implements OnInit, AfterViewInit {\r\n  // Highlighted text.\r\n  @Input() title = '';\r\n  // List of messages to be displayed.\r\n  @Input() events: Array<string> = [];\r\n  // Set the time interval between the text exchange.\r\n  @Input() interval = 3000;\r\n  // Sets the current count visibility.\r\n  @Input() showCounter = true;\r\n  // Change the default blue color.\r\n  @Input() defaultColor: string;\r\n  // Change the back ground color of content.\r\n  @Input() backColor: string;\r\n\r\n  @ViewChild('nt', {static: true}) private ntRef: ElementRef;\r\n  @ViewChild('ntCounter', {static: true}) private ntCounterRef: ElementRef;\r\n  @ViewChild('ntTitle', {static: true}) private ntTitleRef: ElementRef;\r\n  @ViewChild('nDart', {static: true}) private nDart: ElementRef;\r\n  @ViewChildren('ntNavi') ntNaviRef: QueryList<ElementRef>;\r\n\r\n  private ACTIONS = {\r\n    'NEXT': 1,\r\n    'PREV': -1\r\n  };\r\n\r\n  autoNext: any;\r\n  item: string;\r\n  current: string;\r\n  position = -1;\r\n\r\n  constructor(\r\n    private elementRef: ElementRef,\r\n    private renderer: Renderer2) { }\r\n\r\n  ngOnInit() {\r\n    this.autoNavigate();\r\n    this.navigate('NEXT'); // initialize\r\n  }\r\n\r\n  ngAfterViewInit(): void {\r\n    this.defaultColor = this.defaultColor || '#1976D2';\r\n\r\n    // this.elementRef.nativeElement.style.backgroundColor = this.backgroundColor;\r\n    this.renderer.setStyle(this.ntRef.nativeElement, 'background-color', this.backColor || '#FFFFFF');\r\n    this.renderer.setStyle(this.ntRef.nativeElement, 'border-color', this.defaultColor);\r\n\r\n    if (this.ntCounterRef) {\r\n      this.renderer.setStyle(this.ntCounterRef.nativeElement, 'background-color', this.defaultColor);\r\n    }\r\n\r\n    if (this.ntTitleRef) {\r\n      this.renderer.setStyle(this.ntTitleRef.nativeElement, 'background-color', this.defaultColor);\r\n      this.renderer.setStyle(this.nDart.nativeElement, 'border-left-color', this.defaultColor);\r\n    }\r\n\r\n    this.ntNaviRef.forEach(item => {\r\n      this.renderer.setStyle(item.nativeElement, 'border-color', this.defaultColor);\r\n    });\r\n\r\n  }\r\n\r\n  @HostListener('mouseover')\r\n  onMouseOver() {\r\n    clearInterval(this.autoNext);\r\n  }\r\n\r\n  @HostListener('mouseleave')\r\n  onMouseLeave() {\r\n    this.autoNavigate();\r\n  }\r\n\r\n  private autoNavigate() {\r\n    if (this.interval > 0) {\r\n      this.autoNext = setInterval(() => this.navigate('NEXT'), this.interval);\r\n    } else {\r\n      clearInterval(this.autoNext);\r\n    }\r\n  }\r\n\r\n  public navigate(action: string) {\r\n    if (typeof this.ACTIONS[action] === 'undefined') {\r\n      return;\r\n    }\r\n\r\n    const shift = this.ACTIONS[action];\r\n    this.position = this.position + shift;\r\n\r\n    if (this.events) {\r\n      if (this.position < 0) {\r\n        this.position = this.events.length - 1;\r\n      } else if (this.position >= this.events.length) {\r\n        this.position = 0;\r\n      }\r\n\r\n      this.item = this.events[this.position];\r\n      this.current = `${(this.position + 1)}/${this.events.length}`;\r\n    }\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { NgxNewstickerAlbeComponent } from './ngx-newsticker-albe.component';\r\n\r\n@NgModule({\r\n  imports: [CommonModule],\r\n  declarations: [NgxNewstickerAlbeComponent],\r\n  exports: [NgxNewstickerAlbeComponent]\r\n})\r\nexport class NgxNewstickerAlbeModule { }\r\n"]}