/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, Input, ElementRef, Renderer2, QueryList, ViewChild, ViewChildren, HostListener } from '@angular/core';
var NgxNewstickerAlbeComponent = /** @class */ (function () {
    function NgxNewstickerAlbeComponent(elementRef, renderer) {
        this.elementRef = elementRef;
        this.renderer = renderer;
        // Highlighted text.
        this.title = '';
        // List of messages to be displayed.
        this.events = [];
        // Set the time interval between the text exchange.
        this.interval = 3000;
        // Sets the current count visibility.
        this.showCounter = true;
        this.ACTIONS = {
            'NEXT': 1,
            'PREV': -1
        };
        this.position = -1;
    }
    /**
     * @return {?}
     */
    NgxNewstickerAlbeComponent.prototype.ngOnInit = /**
     * @return {?}
     */
    function () {
        this.autoNavigate();
        this.navigate('NEXT'); // initialize
    };
    /**
     * @return {?}
     */
    NgxNewstickerAlbeComponent.prototype.ngAfterViewInit = /**
     * @return {?}
     */
    function () {
        var _this = this;
        this.defaultColor = this.defaultColor || '#1976D2';
        // this.elementRef.nativeElement.style.backgroundColor = this.backgroundColor;
        this.renderer.setStyle(this.ntRef.nativeElement, 'background-color', this.backColor || '#FFFFFF');
        this.renderer.setStyle(this.ntRef.nativeElement, 'border-color', this.defaultColor);
        if (this.ntCounterRef) {
            this.renderer.setStyle(this.ntCounterRef.nativeElement, 'background-color', this.defaultColor);
        }
        if (this.ntTitleRef) {
            this.renderer.setStyle(this.ntTitleRef.nativeElement, 'background-color', this.defaultColor);
            this.renderer.setStyle(this.nDart.nativeElement, 'border-left-color', this.defaultColor);
        }
        this.ntNaviRef.forEach((/**
         * @param {?} item
         * @return {?}
         */
        function (item) {
            _this.renderer.setStyle(item.nativeElement, 'border-color', _this.defaultColor);
        }));
    };
    /**
     * @return {?}
     */
    NgxNewstickerAlbeComponent.prototype.onMouseOver = /**
     * @return {?}
     */
    function () {
        clearInterval(this.autoNext);
    };
    /**
     * @return {?}
     */
    NgxNewstickerAlbeComponent.prototype.onMouseLeave = /**
     * @return {?}
     */
    function () {
        this.autoNavigate();
    };
    /**
     * @private
     * @return {?}
     */
    NgxNewstickerAlbeComponent.prototype.autoNavigate = /**
     * @private
     * @return {?}
     */
    function () {
        var _this = this;
        if (this.interval > 0) {
            this.autoNext = setInterval((/**
             * @return {?}
             */
            function () { return _this.navigate('NEXT'); }), this.interval);
        }
        else {
            clearInterval(this.autoNext);
        }
    };
    /**
     * @param {?} action
     * @return {?}
     */
    NgxNewstickerAlbeComponent.prototype.navigate = /**
     * @param {?} action
     * @return {?}
     */
    function (action) {
        if (typeof this.ACTIONS[action] === 'undefined') {
            return;
        }
        /** @type {?} */
        var shift = this.ACTIONS[action];
        this.position = this.position + shift;
        if (this.events) {
            if (this.position < 0) {
                this.position = this.events.length - 1;
            }
            else if (this.position >= this.events.length) {
                this.position = 0;
            }
            this.item = this.events[this.position];
            this.current = (this.position + 1) + "/" + this.events.length;
        }
    };
    NgxNewstickerAlbeComponent.decorators = [
        { type: Component, args: [{
                    // tslint:disable-next-line:component-selector
                    selector: 'ngx-newsticker',
                    template: "<div #nt class=\"newsticker\">\r\n  <small #ntCounter class=\"nt-counter\" *ngIf=\"showCounter\">{{current}}</small>\r\n  <div #ntTitle class=\"nt-title\">\r\n    <h2>{{title}}</h2>\r\n    <span #nDart></span>\r\n  </div>\r\n  <div class=\"nt-content\">\r\n    <label [innerHTML]=\"item\"></label>\r\n  </div>\r\n  <div class=\"nt-navi\">\r\n    <span (click)=\"navigate('PREV')\">\r\n      <i #ntNavi class=\"arrow-left\"></i>\r\n    </span>\r\n    <span (click)=\"navigate('NEXT')\">\r\n      <i #ntNavi class=\"arrow-right\"></i>\r\n    </span>\r\n  </div>\r\n</div>\r\n",
                    styles: [".newsticker{width:100%;height:40px;background-color:#fff;position:relative;border:1px solid #1976d2}.newsticker>.nt-counter{position:absolute;top:-20px;right:-1px;padding:5px;background-color:#1976d2;color:#fff}.newsticker>.nt-title{width:auto;max-width:180px;height:40px;display:inline-block;background-color:#1976d2;position:relative;text-transform:uppercase}.newsticker>.nt-title>h2{display:inline-block;margin:0;padding:0 15px;line-height:40px;font-size:18px;color:#fff;height:40px;box-sizing:border-box;overflow:hidden;font-weight:lighter}.newsticker>.nt-title>span{width:0;position:absolute;right:-10px;top:10px;height:0;border-style:solid;border-width:10px 0 10px 10px;border-color:transparent transparent transparent #1976d2}.newsticker>.nt-content{padding:0;margin:0;position:absolute;top:0;left:200px;right:40px;height:40px;font-size:16px}.newsticker>.nt-content>label{position:absolute;height:40px;width:100%;line-height:40px;text-decoration:none;color:#333;overflow:hidden;display:block;white-space:nowrap;text-overflow:ellipsis;font-weight:400}.newsticker>.nt-navi{width:50px;height:40px;position:absolute;right:0;top:0;opacity:.1}.newsticker>.nt-navi>span{width:25px;height:40px;position:absolute;cursor:pointer}.newsticker>.nt-navi>span:first-child{left:0}.newsticker>.nt-navi>span:last-child{right:0}.newsticker>.nt-navi>span>i{border:solid #1976d2;border-width:0 2px 2px 0;display:inline-block;padding:6px;position:absolute;top:13px;opacity:.5}.newsticker>.nt-navi>span>i.arrow-right{transform:rotate(-45deg);-webkit-transform:rotate(-45deg)}.newsticker>.nt-navi>span>i.arrow-left{transform:rotate(135deg);-webkit-transform:rotate(135deg);left:10px}.newsticker:hover .nt-navi{opacity:1}.newsticker>.nt-content>label,.newsticker>.nt-navi,.newsticker>.nt-navi>span{transition:.25s linear;-moz-transition:.25s linear;-webkit-transition:.25s linear}"]
                }] }
    ];
    /** @nocollapse */
    NgxNewstickerAlbeComponent.ctorParameters = function () { return [
        { type: ElementRef },
        { type: Renderer2 }
    ]; };
    NgxNewstickerAlbeComponent.propDecorators = {
        title: [{ type: Input }],
        events: [{ type: Input }],
        interval: [{ type: Input }],
        showCounter: [{ type: Input }],
        defaultColor: [{ type: Input }],
        backColor: [{ type: Input }],
        ntRef: [{ type: ViewChild, args: ['nt', { static: true },] }],
        ntCounterRef: [{ type: ViewChild, args: ['ntCounter', { static: true },] }],
        ntTitleRef: [{ type: ViewChild, args: ['ntTitle', { static: true },] }],
        nDart: [{ type: ViewChild, args: ['nDart', { static: true },] }],
        ntNaviRef: [{ type: ViewChildren, args: ['ntNavi',] }],
        onMouseOver: [{ type: HostListener, args: ['mouseover',] }],
        onMouseLeave: [{ type: HostListener, args: ['mouseleave',] }]
    };
    return NgxNewstickerAlbeComponent;
}());
export { NgxNewstickerAlbeComponent };
if (false) {
    /** @type {?} */
    NgxNewstickerAlbeComponent.prototype.title;
    /** @type {?} */
    NgxNewstickerAlbeComponent.prototype.events;
    /** @type {?} */
    NgxNewstickerAlbeComponent.prototype.interval;
    /** @type {?} */
    NgxNewstickerAlbeComponent.prototype.showCounter;
    /** @type {?} */
    NgxNewstickerAlbeComponent.prototype.defaultColor;
    /** @type {?} */
    NgxNewstickerAlbeComponent.prototype.backColor;
    /**
     * @type {?}
     * @private
     */
    NgxNewstickerAlbeComponent.prototype.ntRef;
    /**
     * @type {?}
     * @private
     */
    NgxNewstickerAlbeComponent.prototype.ntCounterRef;
    /**
     * @type {?}
     * @private
     */
    NgxNewstickerAlbeComponent.prototype.ntTitleRef;
    /**
     * @type {?}
     * @private
     */
    NgxNewstickerAlbeComponent.prototype.nDart;
    /** @type {?} */
    NgxNewstickerAlbeComponent.prototype.ntNaviRef;
    /**
     * @type {?}
     * @private
     */
    NgxNewstickerAlbeComponent.prototype.ACTIONS;
    /** @type {?} */
    NgxNewstickerAlbeComponent.prototype.autoNext;
    /** @type {?} */
    NgxNewstickerAlbeComponent.prototype.item;
    /** @type {?} */
    NgxNewstickerAlbeComponent.prototype.current;
    /** @type {?} */
    NgxNewstickerAlbeComponent.prototype.position;
    /**
     * @type {?}
     * @private
     */
    NgxNewstickerAlbeComponent.prototype.elementRef;
    /**
     * @type {?}
     * @private
     */
    NgxNewstickerAlbeComponent.prototype.renderer;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibmd4LW5ld3N0aWNrZXItYWxiZS5jb21wb25lbnQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9uZ3gtbmV3c3RpY2tlci1hbGJlLyIsInNvdXJjZXMiOlsibGliL25neC1uZXdzdGlja2VyLWFsYmUuY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7QUFDQSxPQUFPLEVBQ0wsU0FBUyxFQUVULEtBQUssRUFDTCxVQUFVLEVBRVYsU0FBUyxFQUNULFNBQVMsRUFDVCxTQUFTLEVBQ1QsWUFBWSxFQUNaLFlBQVksRUFDYixNQUFNLGVBQWUsQ0FBQztBQUV2QjtJQW9DRSxvQ0FDVSxVQUFzQixFQUN0QixRQUFtQjtRQURuQixlQUFVLEdBQVYsVUFBVSxDQUFZO1FBQ3RCLGFBQVEsR0FBUixRQUFRLENBQVc7O1FBOUJwQixVQUFLLEdBQUcsRUFBRSxDQUFDOztRQUVYLFdBQU0sR0FBa0IsRUFBRSxDQUFDOztRQUUzQixhQUFRLEdBQUcsSUFBSSxDQUFDOztRQUVoQixnQkFBVyxHQUFHLElBQUksQ0FBQztRQVlwQixZQUFPLEdBQUc7WUFDaEIsTUFBTSxFQUFFLENBQUM7WUFDVCxNQUFNLEVBQUUsQ0FBQyxDQUFDO1NBQ1gsQ0FBQztRQUtGLGFBQVEsR0FBRyxDQUFDLENBQUMsQ0FBQztJQUltQixDQUFDOzs7O0lBRWxDLDZDQUFROzs7SUFBUjtRQUNFLElBQUksQ0FBQyxZQUFZLEVBQUUsQ0FBQztRQUNwQixJQUFJLENBQUMsUUFBUSxDQUFDLE1BQU0sQ0FBQyxDQUFDLENBQUMsYUFBYTtJQUN0QyxDQUFDOzs7O0lBRUQsb0RBQWU7OztJQUFmO1FBQUEsaUJBb0JDO1FBbkJDLElBQUksQ0FBQyxZQUFZLEdBQUcsSUFBSSxDQUFDLFlBQVksSUFBSSxTQUFTLENBQUM7UUFFbkQsOEVBQThFO1FBQzlFLElBQUksQ0FBQyxRQUFRLENBQUMsUUFBUSxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsYUFBYSxFQUFFLGtCQUFrQixFQUFFLElBQUksQ0FBQyxTQUFTLElBQUksU0FBUyxDQUFDLENBQUM7UUFDbEcsSUFBSSxDQUFDLFFBQVEsQ0FBQyxRQUFRLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxhQUFhLEVBQUUsY0FBYyxFQUFFLElBQUksQ0FBQyxZQUFZLENBQUMsQ0FBQztRQUVwRixJQUFJLElBQUksQ0FBQyxZQUFZLEVBQUU7WUFDckIsSUFBSSxDQUFDLFFBQVEsQ0FBQyxRQUFRLENBQUMsSUFBSSxDQUFDLFlBQVksQ0FBQyxhQUFhLEVBQUUsa0JBQWtCLEVBQUUsSUFBSSxDQUFDLFlBQVksQ0FBQyxDQUFDO1NBQ2hHO1FBRUQsSUFBSSxJQUFJLENBQUMsVUFBVSxFQUFFO1lBQ25CLElBQUksQ0FBQyxRQUFRLENBQUMsUUFBUSxDQUFDLElBQUksQ0FBQyxVQUFVLENBQUMsYUFBYSxFQUFFLGtCQUFrQixFQUFFLElBQUksQ0FBQyxZQUFZLENBQUMsQ0FBQztZQUM3RixJQUFJLENBQUMsUUFBUSxDQUFDLFFBQVEsQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLGFBQWEsRUFBRSxtQkFBbUIsRUFBRSxJQUFJLENBQUMsWUFBWSxDQUFDLENBQUM7U0FDMUY7UUFFRCxJQUFJLENBQUMsU0FBUyxDQUFDLE9BQU87Ozs7UUFBQyxVQUFBLElBQUk7WUFDekIsS0FBSSxDQUFDLFFBQVEsQ0FBQyxRQUFRLENBQUMsSUFBSSxDQUFDLGFBQWEsRUFBRSxjQUFjLEVBQUUsS0FBSSxDQUFDLFlBQVksQ0FBQyxDQUFDO1FBQ2hGLENBQUMsRUFBQyxDQUFDO0lBRUwsQ0FBQzs7OztJQUdELGdEQUFXOzs7SUFEWDtRQUVFLGFBQWEsQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDLENBQUM7SUFDL0IsQ0FBQzs7OztJQUdELGlEQUFZOzs7SUFEWjtRQUVFLElBQUksQ0FBQyxZQUFZLEVBQUUsQ0FBQztJQUN0QixDQUFDOzs7OztJQUVPLGlEQUFZOzs7O0lBQXBCO1FBQUEsaUJBTUM7UUFMQyxJQUFJLElBQUksQ0FBQyxRQUFRLEdBQUcsQ0FBQyxFQUFFO1lBQ3JCLElBQUksQ0FBQyxRQUFRLEdBQUcsV0FBVzs7O1lBQUMsY0FBTSxPQUFBLEtBQUksQ0FBQyxRQUFRLENBQUMsTUFBTSxDQUFDLEVBQXJCLENBQXFCLEdBQUUsSUFBSSxDQUFDLFFBQVEsQ0FBQyxDQUFDO1NBQ3pFO2FBQU07WUFDTCxhQUFhLENBQUMsSUFBSSxDQUFDLFFBQVEsQ0FBQyxDQUFDO1NBQzlCO0lBQ0gsQ0FBQzs7Ozs7SUFFTSw2Q0FBUTs7OztJQUFmLFVBQWdCLE1BQWM7UUFDNUIsSUFBSSxPQUFPLElBQUksQ0FBQyxPQUFPLENBQUMsTUFBTSxDQUFDLEtBQUssV0FBVyxFQUFFO1lBQy9DLE9BQU87U0FDUjs7WUFFSyxLQUFLLEdBQUcsSUFBSSxDQUFDLE9BQU8sQ0FBQyxNQUFNLENBQUM7UUFDbEMsSUFBSSxDQUFDLFFBQVEsR0FBRyxJQUFJLENBQUMsUUFBUSxHQUFHLEtBQUssQ0FBQztRQUV0QyxJQUFJLElBQUksQ0FBQyxNQUFNLEVBQUU7WUFDZixJQUFJLElBQUksQ0FBQyxRQUFRLEdBQUcsQ0FBQyxFQUFFO2dCQUNyQixJQUFJLENBQUMsUUFBUSxHQUFHLElBQUksQ0FBQyxNQUFNLENBQUMsTUFBTSxHQUFHLENBQUMsQ0FBQzthQUN4QztpQkFBTSxJQUFJLElBQUksQ0FBQyxRQUFRLElBQUksSUFBSSxDQUFDLE1BQU0sQ0FBQyxNQUFNLEVBQUU7Z0JBQzlDLElBQUksQ0FBQyxRQUFRLEdBQUcsQ0FBQyxDQUFDO2FBQ25CO1lBRUQsSUFBSSxDQUFDLElBQUksR0FBRyxJQUFJLENBQUMsTUFBTSxDQUFDLElBQUksQ0FBQyxRQUFRLENBQUMsQ0FBQztZQUN2QyxJQUFJLENBQUMsT0FBTyxHQUFNLENBQUMsSUFBSSxDQUFDLFFBQVEsR0FBRyxDQUFDLENBQUMsU0FBSSxJQUFJLENBQUMsTUFBTSxDQUFDLE1BQVEsQ0FBQztTQUMvRDtJQUNILENBQUM7O2dCQXZHRixTQUFTLFNBQUM7O29CQUVULFFBQVEsRUFBRSxnQkFBZ0I7b0JBQzFCLHlrQkFBbUQ7O2lCQUVwRDs7OztnQkFkQyxVQUFVO2dCQUVWLFNBQVM7Ozt3QkFlUixLQUFLO3lCQUVMLEtBQUs7MkJBRUwsS0FBSzs4QkFFTCxLQUFLOytCQUVMLEtBQUs7NEJBRUwsS0FBSzt3QkFFTCxTQUFTLFNBQUMsSUFBSSxFQUFFLEVBQUMsTUFBTSxFQUFFLElBQUksRUFBQzsrQkFDOUIsU0FBUyxTQUFDLFdBQVcsRUFBRSxFQUFDLE1BQU0sRUFBRSxJQUFJLEVBQUM7NkJBQ3JDLFNBQVMsU0FBQyxTQUFTLEVBQUUsRUFBQyxNQUFNLEVBQUUsSUFBSSxFQUFDO3dCQUNuQyxTQUFTLFNBQUMsT0FBTyxFQUFFLEVBQUMsTUFBTSxFQUFFLElBQUksRUFBQzs0QkFDakMsWUFBWSxTQUFDLFFBQVE7OEJBMkNyQixZQUFZLFNBQUMsV0FBVzsrQkFLeEIsWUFBWSxTQUFDLFlBQVk7O0lBZ0M1QixpQ0FBQztDQUFBLEFBeEdELElBd0dDO1NBbEdZLDBCQUEwQjs7O0lBRXJDLDJDQUFvQjs7SUFFcEIsNENBQW9DOztJQUVwQyw4Q0FBeUI7O0lBRXpCLGlEQUE0Qjs7SUFFNUIsa0RBQThCOztJQUU5QiwrQ0FBMkI7Ozs7O0lBRTNCLDJDQUEyRDs7Ozs7SUFDM0Qsa0RBQXlFOzs7OztJQUN6RSxnREFBcUU7Ozs7O0lBQ3JFLDJDQUE4RDs7SUFDOUQsK0NBQXlEOzs7OztJQUV6RCw2Q0FHRTs7SUFFRiw4Q0FBYzs7SUFDZCwwQ0FBYTs7SUFDYiw2Q0FBZ0I7O0lBQ2hCLDhDQUFjOzs7OztJQUdaLGdEQUE4Qjs7Ozs7SUFDOUIsOENBQTJCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tbW9uTW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvY29tbW9uJztcclxuaW1wb3J0IHtcclxuICBDb21wb25lbnQsXHJcbiAgT25Jbml0LFxyXG4gIElucHV0LFxyXG4gIEVsZW1lbnRSZWYsXHJcbiAgQWZ0ZXJWaWV3SW5pdCxcclxuICBSZW5kZXJlcjIsXHJcbiAgUXVlcnlMaXN0LFxyXG4gIFZpZXdDaGlsZCxcclxuICBWaWV3Q2hpbGRyZW4sXHJcbiAgSG9zdExpc3RlbmVyXHJcbn0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XHJcblxyXG5AQ29tcG9uZW50KHtcclxuICAvLyB0c2xpbnQ6ZGlzYWJsZS1uZXh0LWxpbmU6Y29tcG9uZW50LXNlbGVjdG9yXHJcbiAgc2VsZWN0b3I6ICduZ3gtbmV3c3RpY2tlcicsXHJcbiAgdGVtcGxhdGVVcmw6ICcuL25neC1uZXdzdGlja2VyLWFsYmUuY29tcG9uZW50Lmh0bWwnLFxyXG4gIHN0eWxlVXJsczogWycuL25neC1uZXdzdGlja2VyLWFsYmUuY29tcG9uZW50LnNjc3MnXVxyXG59KVxyXG5leHBvcnQgY2xhc3MgTmd4TmV3c3RpY2tlckFsYmVDb21wb25lbnQgaW1wbGVtZW50cyBPbkluaXQsIEFmdGVyVmlld0luaXQge1xyXG4gIC8vIEhpZ2hsaWdodGVkIHRleHQuXHJcbiAgQElucHV0KCkgdGl0bGUgPSAnJztcclxuICAvLyBMaXN0IG9mIG1lc3NhZ2VzIHRvIGJlIGRpc3BsYXllZC5cclxuICBASW5wdXQoKSBldmVudHM6IEFycmF5PHN0cmluZz4gPSBbXTtcclxuICAvLyBTZXQgdGhlIHRpbWUgaW50ZXJ2YWwgYmV0d2VlbiB0aGUgdGV4dCBleGNoYW5nZS5cclxuICBASW5wdXQoKSBpbnRlcnZhbCA9IDMwMDA7XHJcbiAgLy8gU2V0cyB0aGUgY3VycmVudCBjb3VudCB2aXNpYmlsaXR5LlxyXG4gIEBJbnB1dCgpIHNob3dDb3VudGVyID0gdHJ1ZTtcclxuICAvLyBDaGFuZ2UgdGhlIGRlZmF1bHQgYmx1ZSBjb2xvci5cclxuICBASW5wdXQoKSBkZWZhdWx0Q29sb3I6IHN0cmluZztcclxuICAvLyBDaGFuZ2UgdGhlIGJhY2sgZ3JvdW5kIGNvbG9yIG9mIGNvbnRlbnQuXHJcbiAgQElucHV0KCkgYmFja0NvbG9yOiBzdHJpbmc7XHJcblxyXG4gIEBWaWV3Q2hpbGQoJ250Jywge3N0YXRpYzogdHJ1ZX0pIHByaXZhdGUgbnRSZWY6IEVsZW1lbnRSZWY7XHJcbiAgQFZpZXdDaGlsZCgnbnRDb3VudGVyJywge3N0YXRpYzogdHJ1ZX0pIHByaXZhdGUgbnRDb3VudGVyUmVmOiBFbGVtZW50UmVmO1xyXG4gIEBWaWV3Q2hpbGQoJ250VGl0bGUnLCB7c3RhdGljOiB0cnVlfSkgcHJpdmF0ZSBudFRpdGxlUmVmOiBFbGVtZW50UmVmO1xyXG4gIEBWaWV3Q2hpbGQoJ25EYXJ0Jywge3N0YXRpYzogdHJ1ZX0pIHByaXZhdGUgbkRhcnQ6IEVsZW1lbnRSZWY7XHJcbiAgQFZpZXdDaGlsZHJlbignbnROYXZpJykgbnROYXZpUmVmOiBRdWVyeUxpc3Q8RWxlbWVudFJlZj47XHJcblxyXG4gIHByaXZhdGUgQUNUSU9OUyA9IHtcclxuICAgICdORVhUJzogMSxcclxuICAgICdQUkVWJzogLTFcclxuICB9O1xyXG5cclxuICBhdXRvTmV4dDogYW55O1xyXG4gIGl0ZW06IHN0cmluZztcclxuICBjdXJyZW50OiBzdHJpbmc7XHJcbiAgcG9zaXRpb24gPSAtMTtcclxuXHJcbiAgY29uc3RydWN0b3IoXHJcbiAgICBwcml2YXRlIGVsZW1lbnRSZWY6IEVsZW1lbnRSZWYsXHJcbiAgICBwcml2YXRlIHJlbmRlcmVyOiBSZW5kZXJlcjIpIHsgfVxyXG5cclxuICBuZ09uSW5pdCgpIHtcclxuICAgIHRoaXMuYXV0b05hdmlnYXRlKCk7XHJcbiAgICB0aGlzLm5hdmlnYXRlKCdORVhUJyk7IC8vIGluaXRpYWxpemVcclxuICB9XHJcblxyXG4gIG5nQWZ0ZXJWaWV3SW5pdCgpOiB2b2lkIHtcclxuICAgIHRoaXMuZGVmYXVsdENvbG9yID0gdGhpcy5kZWZhdWx0Q29sb3IgfHwgJyMxOTc2RDInO1xyXG5cclxuICAgIC8vIHRoaXMuZWxlbWVudFJlZi5uYXRpdmVFbGVtZW50LnN0eWxlLmJhY2tncm91bmRDb2xvciA9IHRoaXMuYmFja2dyb3VuZENvbG9yO1xyXG4gICAgdGhpcy5yZW5kZXJlci5zZXRTdHlsZSh0aGlzLm50UmVmLm5hdGl2ZUVsZW1lbnQsICdiYWNrZ3JvdW5kLWNvbG9yJywgdGhpcy5iYWNrQ29sb3IgfHwgJyNGRkZGRkYnKTtcclxuICAgIHRoaXMucmVuZGVyZXIuc2V0U3R5bGUodGhpcy5udFJlZi5uYXRpdmVFbGVtZW50LCAnYm9yZGVyLWNvbG9yJywgdGhpcy5kZWZhdWx0Q29sb3IpO1xyXG5cclxuICAgIGlmICh0aGlzLm50Q291bnRlclJlZikge1xyXG4gICAgICB0aGlzLnJlbmRlcmVyLnNldFN0eWxlKHRoaXMubnRDb3VudGVyUmVmLm5hdGl2ZUVsZW1lbnQsICdiYWNrZ3JvdW5kLWNvbG9yJywgdGhpcy5kZWZhdWx0Q29sb3IpO1xyXG4gICAgfVxyXG5cclxuICAgIGlmICh0aGlzLm50VGl0bGVSZWYpIHtcclxuICAgICAgdGhpcy5yZW5kZXJlci5zZXRTdHlsZSh0aGlzLm50VGl0bGVSZWYubmF0aXZlRWxlbWVudCwgJ2JhY2tncm91bmQtY29sb3InLCB0aGlzLmRlZmF1bHRDb2xvcik7XHJcbiAgICAgIHRoaXMucmVuZGVyZXIuc2V0U3R5bGUodGhpcy5uRGFydC5uYXRpdmVFbGVtZW50LCAnYm9yZGVyLWxlZnQtY29sb3InLCB0aGlzLmRlZmF1bHRDb2xvcik7XHJcbiAgICB9XHJcblxyXG4gICAgdGhpcy5udE5hdmlSZWYuZm9yRWFjaChpdGVtID0+IHtcclxuICAgICAgdGhpcy5yZW5kZXJlci5zZXRTdHlsZShpdGVtLm5hdGl2ZUVsZW1lbnQsICdib3JkZXItY29sb3InLCB0aGlzLmRlZmF1bHRDb2xvcik7XHJcbiAgICB9KTtcclxuXHJcbiAgfVxyXG5cclxuICBASG9zdExpc3RlbmVyKCdtb3VzZW92ZXInKVxyXG4gIG9uTW91c2VPdmVyKCkge1xyXG4gICAgY2xlYXJJbnRlcnZhbCh0aGlzLmF1dG9OZXh0KTtcclxuICB9XHJcblxyXG4gIEBIb3N0TGlzdGVuZXIoJ21vdXNlbGVhdmUnKVxyXG4gIG9uTW91c2VMZWF2ZSgpIHtcclxuICAgIHRoaXMuYXV0b05hdmlnYXRlKCk7XHJcbiAgfVxyXG5cclxuICBwcml2YXRlIGF1dG9OYXZpZ2F0ZSgpIHtcclxuICAgIGlmICh0aGlzLmludGVydmFsID4gMCkge1xyXG4gICAgICB0aGlzLmF1dG9OZXh0ID0gc2V0SW50ZXJ2YWwoKCkgPT4gdGhpcy5uYXZpZ2F0ZSgnTkVYVCcpLCB0aGlzLmludGVydmFsKTtcclxuICAgIH0gZWxzZSB7XHJcbiAgICAgIGNsZWFySW50ZXJ2YWwodGhpcy5hdXRvTmV4dCk7XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICBwdWJsaWMgbmF2aWdhdGUoYWN0aW9uOiBzdHJpbmcpIHtcclxuICAgIGlmICh0eXBlb2YgdGhpcy5BQ1RJT05TW2FjdGlvbl0gPT09ICd1bmRlZmluZWQnKSB7XHJcbiAgICAgIHJldHVybjtcclxuICAgIH1cclxuXHJcbiAgICBjb25zdCBzaGlmdCA9IHRoaXMuQUNUSU9OU1thY3Rpb25dO1xyXG4gICAgdGhpcy5wb3NpdGlvbiA9IHRoaXMucG9zaXRpb24gKyBzaGlmdDtcclxuXHJcbiAgICBpZiAodGhpcy5ldmVudHMpIHtcclxuICAgICAgaWYgKHRoaXMucG9zaXRpb24gPCAwKSB7XHJcbiAgICAgICAgdGhpcy5wb3NpdGlvbiA9IHRoaXMuZXZlbnRzLmxlbmd0aCAtIDE7XHJcbiAgICAgIH0gZWxzZSBpZiAodGhpcy5wb3NpdGlvbiA+PSB0aGlzLmV2ZW50cy5sZW5ndGgpIHtcclxuICAgICAgICB0aGlzLnBvc2l0aW9uID0gMDtcclxuICAgICAgfVxyXG5cclxuICAgICAgdGhpcy5pdGVtID0gdGhpcy5ldmVudHNbdGhpcy5wb3NpdGlvbl07XHJcbiAgICAgIHRoaXMuY3VycmVudCA9IGAkeyh0aGlzLnBvc2l0aW9uICsgMSl9LyR7dGhpcy5ldmVudHMubGVuZ3RofWA7XHJcbiAgICB9XHJcbiAgfVxyXG59XHJcbiJdfQ==